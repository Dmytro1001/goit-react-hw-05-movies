{"version":3,"file":"static/js/812.439f7f11.chunk.js","mappings":"qRAGaA,EAAUC,EAAAA,EAAAA,IAAH,0NASPC,GAAOD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,0wBAsBJG,EAAOH,EAAAA,EAAAA,GAAH,4GAOJI,EAAOJ,EAAAA,EAAAA,EAAH,wFAMJK,GAAUL,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,41C,UC7CPM,EAAiBN,EAAAA,EAAAA,IAAH,sIAQdO,EAASP,EAAAA,EAAAA,IAAH,0FAMNQ,EAAQR,EAAAA,EAAAA,GAAH,uFAMLS,EAAQT,EAAAA,EAAAA,EAAH,kHAOLI,EAAOJ,EAAAA,EAAAA,EAAH,oHAUJU,EAAOV,EAAAA,EAAAA,KAAH,6IAWJW,EAAOX,EAAAA,EAAAA,GAAH,sD,SCgCjB,EAtEmB,SAAC,GAAgB,IAAdY,EAAa,EAAbA,OAELC,EASXD,EATFE,YACAC,EAQEH,EARFG,MACcC,EAOZJ,EAPFK,aACgBC,EAMdN,EANFO,eACcC,EAKZR,EALFS,aACYC,EAIVV,EAJFW,WACAC,EAGEZ,EAHFY,WACUC,EAERb,EAFFc,SACAC,EACEf,EADFe,OAGF,OACE,UAACrB,EAAD,YACE,SAACC,EAAD,CACEqB,IAAKf,EAAM,0CAAsCA,GAAWgB,EAC5DC,IAAKf,KAEP,2BACE,SAACJ,EAAD,WACE,UAACH,EAAD,WACGO,EADH,KACYC,EAAKe,MAAM,EAAG,GAD1B,UAIF,SAACpB,EAAD,WACE,UAAC,EAAD,2BACc,SAACD,EAAD,UAAOU,EAAKY,QAAQ,KADlC,KAC6C,0BAAOV,UAGtD,SAACX,EAAD,WACE,UAAC,EAAD,+BACkB,0BAAOO,UAG3B,SAACP,EAAD,WACE,UAAC,EAAD,2BACc,0BAAOa,EAAWQ,QAAQ,WAG1C,SAACrB,EAAD,WACE,UAAC,EAAD,sBACS,0BAAOgB,EAAOM,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,cAGvD,UAACzB,EAAD,YACE,SAACF,EAAD,qBACA,SAAC,EAAD,WACE,0BAAOgB,cAMlB,E,UCvBD,EApCqB,WAAO,IAAD,IACzB,GAA4BY,EAAAA,EAAAA,UAAS,MAArC,eAAOzB,EAAP,KAAe0B,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAMxD,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBT,GAASU,MAAK,SAAAC,GAAI,OAAIZ,EAAUY,EAAd,GACtC,GAAE,CAACX,KAGF,iCACE,SAAClC,EAAD,CAAS8C,GAAIR,EAAiBS,QAA9B,qBAECxC,IAAU,SAAC,EAAD,CAAYA,OAAQA,KAE/B,UAACb,EAAD,YACE,SAACK,EAAD,uCACA,UAACD,EAAD,YACE,yBACE,SAACF,EAAD,CAAMkD,GAAG,OAAT,qBAEF,yBACE,SAAClD,EAAD,CAAMkD,GAAG,UAAT,8BAKN,SAAC,EAAAE,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,6MCvCKC,EAAU,mCACVC,EAAW,gCAEXC,EAAmB,mCAAG,6GAEDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAHnB,cAElBI,EAFkB,yBAKjBA,EAASV,KAAKW,SALG,gCAOxBC,QAAQC,MAAR,MAPwB,yDAAH,qDAWnBC,EAAiB,mCAAG,WAAMC,GAAN,gGAECN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,iCAC8CS,EAD9C,gCAFD,cAEhBL,EAFgB,yBAKfA,EAASV,KAAKW,SALC,gCAOtBC,QAAQC,MAAR,MAPsB,yDAAH,sDAWjBf,EAAkB,mCAAG,WAAMkB,GAAN,gGAEAP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,oBACcV,EADd,oBAFA,cAEjBI,EAFiB,yBAKhBA,EAASV,MALO,gCAOvBY,QAAQC,MAAR,MAPuB,yDAAH,sDAWlBI,EAAc,mCAAG,WAAMD,GAAN,gGAEIP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,4BACsBV,EADtB,oBAFJ,cAEbI,EAFa,yBAKZA,EAASV,MALG,gCAOnBY,QAAQC,MAAR,MAPmB,yDAAH,sDAWdK,EAAiB,mCAAG,WAAMF,GAAN,gGAECP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,4BACsBV,EADtB,oBAFD,cAEhBI,EAFgB,yBAKfA,EAASV,MALM,gCAOtBY,QAAQC,MAAR,MAPsB,yDAAH,sDAWvBC,EAAkBK,UAAY,CAC5BJ,MAAOK,EAAAA,UAAAA,OAAAA,YAGTtB,EAAmBqB,UAAY,CAC7BH,GAAII,EAAAA,UAAAA,OAAAA,YAGNH,EAAeE,UAAY,CACzBH,GAAII,EAAAA,UAAAA,OAAAA,YAGNF,EAAkBC,UAAY,CAC5BH,GAAII,EAAAA,UAAAA,OAAAA,W","sources":["pages/MovieDetails/MovieDetails.styles.js","components/AboutMovie/AboutMovie.styles.js","components/AboutMovie/AboutMovie.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: wrap;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  background: linear-gradient(to right, #ec7a7a 0%, #e0d8d8 50%, #e0d8d8 100%);\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-size: 20px;\n  font-weight: 500;\n  text-shadow: 1px 0px 1px #cccccc, 0px 1px 1px #eeeeee, 2px 1px 1px #cccccc,\n    1px 2px 1px #eeeeee, 3px 2px 1px #cccccc, 2px 3px 1px #eeeeee,\n    4px 3px 1px #cccccc, 2px 2px 2px rgba(206, 89, 55, 0);\n\n  &.active {\n    font-weight: 700;\n    color: #f8e12a;\n    text-shadow: 1px 0px 1px #999999, 0px 1px 1px #959595, 2px 1px 1px #999999,\n      1px 2px 1px #959595, 3px 2px 1px #999999, 2px 3px 1px #959595,\n      4px 3px 1px #999999, 3px 4px 1px #959595, 5px 4px 1px #999999,\n      4px 5px 1px #959595, 6px 5px 1px #999999, 5px 6px 1px #959595,\n      7px 6px 1px #999999, 2px 2px 2px rgba(206, 89, 55, 0);\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  margin-right: 20px;\n`;\n\nexport const BackBtn = styled(NavLink)`\n  margin-left: 40px;\n  max-width: 100px;\n  padding: 5px 10px;\n  border: none;\n  outline: none;\n  text-align: center;\n  font-weight: 700;\n  color: rgb(255, 255, 255);\n  background: #222;\n  cursor: pointer;\n  position: relative;\n  z-index: 0;\n  border-radius: 10px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  &:before {\n    content: '';\n    background: linear-gradient(\n      45deg,\n      #ff0000,\n      #ff7300,\n      #fffb00,\n      #48ff00,\n      #00ffd5,\n      #002bff,\n      #7a00ff,\n      #ff00c8,\n      #ff0000\n    );\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    background-size: 400%;\n    z-index: -1;\n    filter: blur(5px);\n    -webkit-filter: blur(5px);\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    animation: glowing-button-85 20s linear infinite;\n    transition: opacity 0.3s ease-in-out;\n    border-radius: 10px;\n  }\n\n  @keyframes glowing-button-85 {\n    0% {\n      background-position: 0 0;\n    }\n    50% {\n      background-position: 400% 0;\n    }\n    100% {\n      background-position: 0 0;\n    }\n  }\n\n  &:after {\n    z-index: -1;\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    left: 0;\n    top: 0;\n    border-radius: 10px;\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const MovieContainer = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: flex-start ;\nmax-width: 1280px;\npadding: 20px 40px;\n`;\n\nexport const Poster = styled.img`\nwidth: 320px;\nmargin-right:15px;\nborder-radius: 10px 0 0 10px;\n`;\n\nexport const Title = styled.h2`\nfont-size: 32px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nexport const About = styled.p`\nfont-size: 20px;\ntext-transform: uppercase;\n  font-weight: 700;\n  margin-bottom: 5px;\n`;\n\nexport const Text = styled.p`\nfont-size: 18px;\nfont-weight: 700;\nmargin-bottom: 10px;\n\n& span{\nfont-weight: 400;\n}\n`;\n\nexport const Vote = styled.span`\npadding: 1px 5px;\n  border-radius: 8px;\nbackground-color: #FF8303;\ncolor: #fff;\n\n& span{\nfont-weight: 400;\n}\n`;\n\nexport const Item = styled.li`\n /* margin-bottom: 10px; */\n `","import { PropTypes } from 'prop-types';\nimport noPoster from '../../images/no_poster.png';\nimport {\n  MovieContainer,\n  Poster,\n  Title,\n  About,\n  Text,\n  Item,\n  Vote,\n} from './AboutMovie.styles';\n\nconst AboutMovie = ({ movies }) => {\n  const {\n    poster_path: poster,\n    title,\n    release_date: date,\n    original_title: originalTitle,\n    vote_average: vote,\n    vote_count: votes,\n    popularity,\n    overview: about,\n    genres,\n  } = movies;\n\n  return (\n    <MovieContainer>\n      <Poster\n        src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : noPoster}\n        alt={title}\n      />\n      <ul>\n        <Item>\n          <Title>\n            {title} ({date.slice(0, 4)})\n          </Title>\n        </Item>\n        <Item>\n          <Text>\n            Vote/Votes: <Vote>{vote.toFixed(1)}</Vote>/<span>{votes}</span>\n          </Text>\n        </Item>\n        <Item>\n          <Text>\n            Original Title: <span>{originalTitle}</span>\n          </Text>\n        </Item>\n        <Item>\n          <Text>\n            Popularity: <span>{popularity.toFixed(1)}</span>\n          </Text>\n        </Item>\n        <Item>\n          <Text>\n            Genre: <span>{genres.map(genre => genre.name).join(', ')}</span>\n          </Text>\n        </Item>\n        <Item>\n          <About>About</About>\n          <Text>\n            <span>{about}</span>\n          </Text>\n        </Item>\n      </ul>\n    </MovieContainer>\n  );\n};\n\nAboutMovie.propTypes = {\n  movies: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    original_title: PropTypes.string,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n    popularity: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }),\n};\n\nexport default AboutMovie;\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { moviesDetailsFetch } from '../../services/api';\nimport { Wrapper, Link, List, Text, BackBtn } from './MovieDetails.styles';\nimport AboutMovie from 'components/AboutMovie/AboutMovie';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movies, setMovies] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    moviesDetailsFetch(movieId).then(data => setMovies(data));\n  }, [movieId]);\n\n  return (\n    <>\n      <BackBtn to={backLinkLocation.current}>Go back</BackBtn>\n\n      {movies && <AboutMovie movies={movies} />}\n\n      <Wrapper>\n        <Text>Additional information:</Text>\n        <List>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </List>\n      </Wrapper>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { PropTypes } from 'prop-types';\nimport axios from 'axios';\nconst API_KEY = '935077f1f1ce8c80ce35dd9a38d63eff';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst moviesTrendingFetch = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst moviesSearchFetch = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst moviesDetailsFetch = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst movieCastFetch = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst movieReviewsFetch = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nmoviesSearchFetch.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\nmoviesDetailsFetch.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nmovieCastFetch.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nmovieReviewsFetch.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport {\n  moviesTrendingFetch,\n  moviesSearchFetch,\n  moviesDetailsFetch,\n  movieCastFetch,\n  movieReviewsFetch,\n};\n"],"names":["Wrapper","styled","Link","NavLink","List","Text","BackBtn","MovieContainer","Poster","Title","About","Vote","Item","movies","poster","poster_path","title","date","release_date","originalTitle","original_title","vote","vote_average","votes","vote_count","popularity","about","overview","genres","src","noPoster","alt","slice","toFixed","map","genre","name","join","useState","setMovies","movieId","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","moviesDetailsFetch","then","data","to","current","Suspense","fallback","Loader","API_KEY","BASE_URL","moviesTrendingFetch","axios","response","results","console","error","moviesSearchFetch","query","id","movieCastFetch","movieReviewsFetch","propTypes","PropTypes"],"sourceRoot":""}