{"version":3,"file":"static/js/544.f580b2ce.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styles.js","components/MoviesItem/MoviesItem.styles.js","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  max-width: 1280px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n  gap: 10px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 20px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding: 10px;\n  border-radius: 5px;\n  max-width: 302px;\n  height: 100%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #ffd59a;\n  box-shadow: 1px 3px 5px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 550ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 550ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  &:hover {\n    background-color: #bfa074;\n    transform: scale(1.03);\n    cursor: pointer;\n\n    & h2 {\n      color: #ffffff;\n    }\n  }\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Image = styled.img`\n  width: 288px;\n  height: 384px;\n  margin-bottom: 10px;\n  object-fit: cover;\n  background: #fff;\n`;\n\nexport const Title = styled.h2`\n  font-size: 12px;\n  font-weight: 700;\n  color: #1a120b;\n  text-shadow: #ff8303 1px 0 3px;\n  transition: color 550ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\nexport const Vote = styled.span`\n  font-size: 15px;\n  font-weight: 700;\n  padding: 1px 5px;\n  border-radius: 8px;\n  background-color: #ff8303;\n  color: #f0e3ca;\n`;\n","import { PropTypes } from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Item, Image, Info, Title, Vote } from './MoviesItem.styles';\nimport noPoster from '../../images/no_poster.png';\n\nconst MoviesItem = ({ id, title, poster, vote }) => {\n  const rating = vote.toFixed(1);\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <Image\n          src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : noPoster}\n          alt={title}\n        />\n        <Info>\n          <Title>{title}</Title>\n          <Vote>{rating}</Vote>\n        </Info>\n      </Link>\n    </Item>\n  );\n};\n\nexport { MoviesItem };\n\nMoviesItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n  vote: PropTypes.number.isRequired,\n};\n","import { PropTypes } from 'prop-types';\nimport { List } from './MoviesList.styles';\n\nimport { MoviesItem } from 'components/MoviesItem/MoviesItem';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path, vote_average }) => {\n          return (\n            <MoviesItem\n              key={id}\n              id={id}\n              title={title}\n              poster={poster_path}\n              vote={vote_average}\n            />\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport { MoviesList };\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { moviesTrendingFetch } from '../../services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    moviesTrendingFetch().then(data => setMovies(data));\n  }, []);\n\n  return <>{movies && <MoviesList movies={movies} />}</>;\n};\n\nexport default Home;\n","import { PropTypes } from 'prop-types';\nimport axios from 'axios';\nconst API_KEY = '935077f1f1ce8c80ce35dd9a38d63eff';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst moviesTrendingFetch = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst moviesSearchFetch = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst moviesDetailsFetch = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst movieCastFetch = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst movieReviewsFetch = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nmoviesSearchFetch.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\nmoviesDetailsFetch.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nmovieCastFetch.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nmovieReviewsFetch.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport {\n  moviesTrendingFetch,\n  moviesSearchFetch,\n  moviesDetailsFetch,\n  movieCastFetch,\n  movieReviewsFetch,\n};\n"],"names":["List","styled","Item","Info","Image","Title","Vote","MoviesItem","id","title","poster","rating","vote","toFixed","location","useLocation","to","state","from","src","noPoster","alt","MoviesList","movies","map","poster_path","vote_average","useState","setMovies","useEffect","moviesTrendingFetch","then","data","API_KEY","BASE_URL","axios","response","results","console","error","moviesSearchFetch","query","moviesDetailsFetch","movieCastFetch","movieReviewsFetch","propTypes","PropTypes"],"sourceRoot":""}